apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-ms
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customer-ms
  template:
    metadata:
      labels:
        app: customer-ms
    spec:
      containers:
      - name: customer-ms
        image: 975050002971.dkr.ecr.us-east-1.amazonaws.com/order-manager:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
        resources:
          requests:
            cpu: 10m
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: customer-ms-config
                key: POSTGRES_HOST
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: customer-ms-config
                key: POSTGRES_PORT
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: customer-ms-config
                key: POSTGRES_DB
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: customer-ms-config
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: customer-ms-config
                key: POSTGRES_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: svc-customer-ms
spec:
  type: LoadBalancer
  selector:
    app: customer-ms
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
